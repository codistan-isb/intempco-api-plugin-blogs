type Resources {
  _id: ID!
  title: String
  description: String
  image: ImageSizes
  createdAt: DateTime
  updatedAt: DateTime
}
input resourcesInput {
  title: String
  description: String
  image: ImageSizesInput
}
input ImageSizesInput {
  "Use this URL to get a large resolution file for this image"
  large: String

  "Use this URL to get a medium resolution file for this image"
  medium: String

  """
  Use this URL to get this image with its original resolution as uploaded. This may not be
  the true original size if there is a hard cap on how big image files can be.
  """
  original: String

  "Use this URL to get a small resolution file for this image"
  small: String

  "Use this URL to get a thumbnail resolution file for this image"
  thumbnail: String
}
type ImageSizes {
  "Use this URL to get a large resolution file for this image"
  large: String

  "Use this URL to get a medium resolution file for this image"
  medium: String

  """
  Use this URL to get this image with its original resolution as uploaded. This may not be
  the true original size if there is a hard cap on how big image files can be.
  """
  original: String

  "Use this URL to get a small resolution file for this image"
  small: String

  "Use this URL to get a thumbnail resolution file for this image"
  thumbnail: String
}
type ResourcesPayload {
  totalCount: Int
  data: [Resources]
}
type Mutation {
  createResource(input: resourcesInput): Resources
  #   updateService(
  #     id: ID!
  #     title: String!
  #     description: String!
  #     image: String!
  #   ): Service!
  #   deleteService(id: ID!): ID!
}
type Query {
  # getServiceById(id: ID!): Service
  getAllResources(
    itemPerPage: Int
    PageNumber: Int
    searchQuery: String
  ): ResourcesPayload
}
